{"version":3,"sources":["components/Form/Form.styled.jsx","redux/selectors.jsx","redux/actions.jsx","components/Form/Form.jsx","components/List/List.styled.jsx","components/List/Contact.jsx","components/List/List.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.styled.jsx","App.js","redux/reducer.jsx","redux/store.jsx","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","createContact","createAction","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","dispatch","useDispatch","allContacts","useSelector","handleContact","e","currentTarget","value","addContact","contactToCheck","some","alert","actions","onSubmit","preventDefault","htmlFor","onChange","type","pattern","title","required","List","ul","Item","li","Contact","onClick","ContactList","map","Filter","contactsActions","target","FirstTitle","h1","SecondTitle","h2","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2480dd7a.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: block;\n  margin-left: 22px;\n`;\n\nexport const Label = styled.label`\n  font-size: 15px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 222px;\n  height: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 56px;\n  margin-top: 10px;\n  width: 110px;\n  height: 37px;\n  color: white;\n  background-color: navy;\n  border-style: none;\n  border-radius: 4px;\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst createContact = createAction('createContact', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('deleteContact');\n\nconst changeFilter = createAction('changeFilter');\n\n// eslint-disable-next-line\nexport default { createContact, deleteContact, changeFilter };\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Label, Input, Button } from './Form.styled';\nimport { getContacts } from '../../redux/selectors';\nimport actions from '../../redux/actions';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const allContacts = useSelector(getContacts);\n\n  const handleContact = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContact();\n    setName('');\n    setNumber('');\n  };\n\n  const addContact = () => {\n    const contactToCheck = {\n      name,\n      number,\n    };\n    allContacts.some(contact => contact.name === contactToCheck.name)\n      ? alert(`${contactToCheck.name} is already in contacts`)\n      : dispatch(actions.createContact(name, number));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          value={name}\n          onChange={handleContact}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number\n        <Input\n          value={number}\n          onChange={handleContact}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы,\n             тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <div>\n        <Button type=\"submit\">Add contact</Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 22px;\n`;\n\nexport const Item = styled.li`\n  background-color: whitesmoke;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 344px;\n  margin-bottom: 8px;\n`;\n\nexport const Button = styled.button`\n  width: 88px;\n  height: 30px;\n  color: white;\n  background-color: navy;\n  border-style: none;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './List.styled';\n\nexport const Contact = ({ id, name, number, onClick }) => {\n  return (\n    <Item key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <Button type=\"button\" onClick={onClick}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\n// export default Contact\n","import PropTypes from 'prop-types';\nimport { Contact } from './Contact';\nimport { List } from './List.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Contact\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 22px;\n  font-weight: 500;\n`;\n","import { Label } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport contactsActions from '../../redux/actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      <p> Find contact by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const FirstTitle = styled.h1`\n  margin-left: 110px;\n`;\n\nexport const SecondTitle = styled.h2`\n  margin-top: 40px;\n  margin-left: 144px;\n`;\n","import Form from './components/Form/Form';\nimport ContactsList from './components/List/List';\nimport Filter from './components/Filter/Filter';\nimport { FirstTitle, SecondTitle } from './App.styled';\n\nconst App = () => {\n  return (\n    <div>\n      <FirstTitle>Phonebook</FirstTitle>\n      <Form />\n      <SecondTitle>Contacts</SecondTitle>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst items = createReducer([], {\n  [actions.createContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}